% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Counting.R
\name{spell_dur}
\alias{spell_dur}
\title{impute durations of episodes in specified reference state}
\usage{
spell_dur(x, state = "Inactive", not_first = FALSE)
}
\arguments{
\item{x}{character vector of state in each time step}

\item{state}{character. The reference state. Could be a vector of states too.}

\item{not_first}{logical. Shall we ignore the first episode of the given state? Default \code{FALSE}}
}
\description{
produce a vector of \code{length(x)} values corresponding to the total duration of each episode of the reference state.
}
\details{
\code{NA} are given for other states. \code{state} can be a vector of states if you'd rather consider certain states merged into single episodes.
}
\examples{
x <- rep(c("Employed", "Inactive", "Retired", "Employed", "Retired", 
				"Dead"), c(7,  8,  3,  3, 25,  5))
# a single 8-year spell of inactivity
spell_dur(x, "Inactive", not_first = FALSE)
# catches nothing since there was only one spell of inactivity
spell_dur(x, "Inactive", not_first = TRUE)
# merges first consecutive employment and inactivity spells into a single spell,
# also catches second employment after retirement
spell_dur(x, c("Inactive","Employed"), not_first = FALSE)
# catches just last employment spell
spell_dur(x, c("Inactive","Employed"), not_first = TRUE)
# total lifespan 50+
spell_dur(x, c("Inactive","Employed","Retired"), not_first = FALSE)
}
